#!/bin/bash

# Simple shell wrapper for fcl_maker.py
# Sets up Mu2e environment and calls the Python script

# Check required arguments
if [[ $# -eq 0 ]] || [[ "$1" == "--help" ]] || [[ "$1" == "-h" ]]; then
    echo "Usage: fcldump [options]"
    echo "  --dataset <dataset>    Dataset name"
    echo "  --target <file>        Target output file (e.g., dig.mu2e.*.001202_00000428.art)"
    echo "  --local-jobdef <file>  Local job definition file"
    echo "  --list-dsconf <dsconf> List all job definitions for a given dsconf"
    echo "  --index <n>            Job index"
    echo "  --proto <proto>        Default protocol (default: root)"
    echo "  --loc <loc>            Default location (default: tape)"
    echo ""
    echo "Examples:"
    echo "  fcldump --dataset dts.mu2e.RPCInternalPhysical.MDC2020az.art"
    echo "  fcldump --target dig.mu2e.DIOtail95Mix1BBTriggered.MDC2020ba_best_v1_3.001202_00000428.art"
    echo "  fcldump --local-jobdef jobdef.tar --index 0"
    echo "  fcldump --dataset cnf.mu2e.DIOtail95Mix1BB.MDC2020ba_best_v1_3.tar"
    echo "  fcldump --list-dsconf MDC2020ba_best_v1_3"
    echo ""
    echo "Note: Either --dataset, --target, or --local-jobdef must be provided"
    exit 1
fi

# Find and execute the Python script
SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
PYTHON_SCRIPT="$SCRIPT_DIR/utils/fcldump.py"

if [[ ! -f "$PYTHON_SCRIPT" ]]; then
    echo "Error: Python script not found at $PYTHON_SCRIPT"
    exit 1
fi

# Execute the Python script with all arguments
exec python3 "$PYTHON_SCRIPT" "$@"
